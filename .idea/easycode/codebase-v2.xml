<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="com.obiscr.chatgpt.settings.EasyCodeState">
    <option name="projectFiles" value="$PROJECT_DIR$/app/src/androidTest/java/com/example/readalready_mad_project/ExampleInstrumentedTest.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/data/api/BookApiService.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/data/database/AppDatabase.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/data/database/BookDAO.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/data/database/BookEntity.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/data/database/Converters.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/data/mapper/BookMapper.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/data/model/Book.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/data/repository/BookRepository.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/data/repository/BookRepositoryImpl.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/di/AppModule.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/di/DatabaseModule.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/di/NetworkModule.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/di/RepositoryModule.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/states/BooksState.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/states/SearchState.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/states/SettingState.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/ui/components/BookCard.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/ui/components/LoadingSpinner.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/ui/components/RatingBar.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/ui/components/SearchBar.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/ui/screens/BooksScreen.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/ui/screens/SearchScreen.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/ui/screens/SettingsScreen.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/ui/theme/Colors.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/ui/theme/CustomTheme.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/ui/theme/Typography.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/ui/Navigation.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/utils/constants.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/viewmodel/BooksViewModel.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/viewmodel/SearchViewmodel.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/viewmodel/SettingsViewmodel.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/MainActivity.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/main/java/com/example/readalready_mad_project/MyApp.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/src/test/java/com/example/readalready_mad_project/ExampleUnitTest.kt;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/app/build.gradle.kts;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/build.gradle.kts;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project/settings.gradle.kts" />
    <option name="forceFullIndex" value="false" />
    <option name="fileSummaryMaps" value="{&quot;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project&quot;:&quot;{\&quot;/app/src/main/java/com/example/readalready_mad_project/data/database/Converters.kt\&quot;:\&quot;This file contains a single class, `Converters`, which provides type converter functions for converting between a `List\\u003cString\\u003e` and a JSON string representation.\\n\\n`Converters`: A class that provides type converter functions for converting between a `List\\u003cString\\u003e` and a JSON string representation.\\n\\n`listToJson`: A function that converts a `List\\u003cString\\u003e` to a JSON string representation.\\n`jsonToList`: A function that converts a JSON string representation to a `List\\u003cString\\u003e`.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/screens/BooksScreen.kt\&quot;:\&quot;This file contains the implementation of the BooksScreenContent, MainContent, FilterBar, and AlphabetScrollbar composable functions, which are used to display a list of books with filtering and scrolling functionality.\\n\\n`BooksScreenContent`: Composable function that sets up the main content of the books screen.\\n\\n`MainContent`: Composable function that displays the list of books, the filter bar, and the alphabet scrollbar.\\n\\n`FilterBar`: Composable function that creates a dropdown menu for selecting a filter option.\\n\\n`AlphabetScrollbar`: Composable function that displays an alphabet scrollbar to quickly navigate through the list of books.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/components/BookCard.kt\&quot;:\&quot;This file contains the implementation of a `BookCard` Composable function and related classes and functions for displaying a book card in a Jetpack Compose-based Android application.\\n\\n`BookCardConfig`: A data class that holds the configuration options for the `BookCard` Composable.\\n\\n`BookCardConfigBuilder`: A class that provides a builder pattern for creating `BookCardConfig` instances.\\n\\n`BookCard`: A Composable function that renders a book card with various configurable elements such as title, authors, publisher, published date, page count, rating, description, and image.\\n\\n`BookImage`: A Composable function that displays the book\\u0027s thumbnail image using the Coil library.\\n\\n`BookCardPreview`: A Composable function that provides a preview of the `BookCard` Composable in the Android Studio preview.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/MyApp.kt\&quot;:\&quot;This file contains a single class:\\n\\n`MyApp`: This class extends the `Application` class and is annotated with `@HiltAndroidApp`, which is a Dagger Hilt annotation that enables dependency injection for the entire application.\\n\\nThis file sets up the application class for the \\\&quot;ReadAlready_MAD_Project\\\&quot; Android application, which is necessary for using Dagger Hilt for dependency injection throughout the application.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/data/mapper/BookMapper.kt\&quot;:\&quot;This file contains a single object called `BookMapper` that provides utility functions for mapping between different data models related to books.\\n\\n`BookMapper`: An object that provides utility functions for mapping between different data models related to books.\\n\\n`bookResponseToBookEntity`: A function that takes a `BookResponse` object and maps it to a list of `BookEntity` objects.\\n\\nThe file also contains commented-out functions `toBook` and `toEntity` that are not currently being used.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/theme/Typography.kt\&quot;:\&quot;This file defines the typography settings for a Compose-based Android application. It does not contain any classes or functions, but rather defines a `Typography` object that specifies the text styles to be used throughout the application.\\n\\n`Typography`: Defines the default text styles for the application, including the body large and title large styles.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/components/SearchBar.kt\&quot;:\&quot;This file contains a single Composable function:\\n\\n`SearchBar`: A composable function that creates a search bar UI component with a search icon, placeholder text, and keyboard actions for triggering a search.\\n\\nThe file defines a reusable search bar component for a Jetpack Compose-based Android application, allowing users to input a search query and triggering a search action when the user presses the \\\&quot;Search\\\&quot; key on the keyboard.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/data/repository/BookRepository.kt\&quot;:\&quot;This file is a Kotlin class that serves as a repository for managing book data. It interacts with a book API service and a local database to fetch, store, and delete book information. Here\\u0027s a breakdown of the classes and functions in the file:\\n\\n`BookRepository`: A class that serves as a repository for managing book data, including fetching books from an API, storing them in a local database, and deleting books from the database.\\n\\n`getBooksFromApi(query: String)`: A function that fetches a list of books from the book API based on a given search query and returns a flow of the book entities.\\n\\n`getBooksFromDb()`: A function that retrieves a list of all books stored in the local database and returns a flow of the book entities.\\n\\n`addBookToDb(book: BookEntity)`: A function that adds a new book entity to the local database.\\n\\n`deleteBookFromDB(bookId: String)`: A function that deletes a book from the local database based on the book\\u0027s ID.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/screens/SettingsScreen.kt\&quot;:\&quot;This file contains a single class:\\n\\n`SettingsScreen`: This class represents the settings screen of the application, where users can configure various application settings.\\n\\nThis file does not contain any functions. It simply defines the `SettingsScreen` class, which is likely used to handle the user interface and functionality related to the application\\u0027s settings.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/viewmodel/SearchViewmodel.kt\&quot;:\&quot;This file contains a single class and several functions:\\n\\n`SearchViewmodel`: A ViewModel class that handles the search functionality for books, including searching for books from an API, adding books to a database, and managing the state of the search.\\n\\n`searchForBooks`: Searches for books from an API based on the provided query and updates the state with the search results.\\n\\n`addBook`: Adds a book to the database.\\n\\nThe file also imports several classes and interfaces from other packages, including `ViewModel`, `BookEntity`, `BookRepository`, and various state classes. The purpose of this file is to provide a ViewModel implementation for the search functionality of a book-related application.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/di/AppModule.kt\&quot;:\&quot;This file appears to be an empty Kotlin class named `AppModule`. It does not contain any functions or additional classes. The purpose of this file is likely to serve as a Dependency Injection (DI) module for the `readalready_mad_project` application, but it does not have any implementation details provided in the given code snippet.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/components/LoadingSpinner.kt\&quot;:\&quot;This file contains a single class:\\n\\n`LoadingSpinner`: This class represents a loading spinner component, which is likely used to display a loading indicator in the user interface.\\n\\nThis file does not contain any functions. It appears to be a simple class definition for a loading spinner component, which can be used in the application\\u0027s user interface to indicate that some content or data is being loaded.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/Navigation.kt\&quot;:\&quot;This file defines a sealed class `Navigation` that represents different screens or destinations within an application. Each inner class within `Navigation` represents a specific screen with a corresponding route.\\n\\n`Navigation`: Defines a sealed class that represents different screens or destinations within the application.\\n\\n`BooksScreen`: Represents the screen that displays the user\\u0027s books.\\n\\n`SearchScreen`: Represents the screen that allows the user to search for books.\\n\\n`SettingsScreen`: Represents the screen that allows the user to access the application\\u0027s settings.\\n\\n`SingleBookScreen`: Represents the screen that displays details of a single book.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/states/BooksState.kt\&quot;:\&quot;This file defines the following classes and enumerations:\\n\\n`BooksState`: A data class that represents the state of the books in the application, including a list of all books, a filtered list of books, and the current filter option.\\n\\n`FilterOption`: An enumeration that defines the different filter options available for the books, including \\\&quot;All\\\&quot;, \\\&quot;Already Read\\\&quot;, \\\&quot;Not Read\\\&quot;, \\\&quot;Author\\\&quot;, and \\\&quot;Title\\\&quot;.\\n\\nThis file does not contain any functions. It serves to define the data structures and filter options used in the application\\u0027s state management.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/utils/constants.kt\&quot;:\&quot;This file contains a single class named `constants`, but it does not have any functions defined within it. The purpose of this file is to serve as a container for any constant values or configurations that may be used throughout the application.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/data/database/BookEntity.kt\&quot;:\&quot;This file defines a data class `BookEntity` that represents a book in the application\\u0027s database. The file does not contain any functions, only the definition of the `BookEntity` class.\\n\\n`BookEntity`: A data class that represents a book in the application\\u0027s database, containing information such as the book\\u0027s title, authors, publisher, publication date, description, page count, categories, average rating, ratings count, and thumbnail images.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/states/SettingState.kt\&quot;:\&quot;This file contains a single class:\\n\\n`SettingState`: This class represents the state of the application\\u0027s settings.\\n\\nThis file does not contain any functions. It simply defines a class to represent the state of the application\\u0027s settings.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/viewmodel/BooksViewModel.kt\&quot;:\&quot;This file contains a single class and several functions:\\n\\n`BooksViewModel`: A ViewModel class that manages the state and behavior of a list of books, including fetching books from an API, applying filters, and deleting books from the database.\\n\\n`init`: Initializes the ViewModel by fetching books from the database and updating the state accordingly.\\n\\n`onFilterChanged`: Updates the state of the ViewModel with a new filter option and applies the filter to the list of books.\\n\\n`fetchBooksFromApi`: Fetches a list of books from an API and updates the state of the ViewModel with the filtered results.\\n\\n`deleteBook`: Deletes a book from the database.\\n\\n`applyFilter`: Applies a given filter option to a list of books and returns the filtered list.\&quot;,\&quot;/app/src/androidTest/java/com/example/readalready_mad_project/ExampleInstrumentedTest.kt\&quot;:\&quot;This file contains an instrumented test for an Android app. It does not contain any classes or functions, but rather a single test case that checks if the app\\u0027s package name matches the expected value.\\n\\n`ExampleInstrumentedTest`: This is an instrumented test class that runs on an Android device and tests the app\\u0027s context.\\n\\n`useAppContext()`: This test function checks if the app\\u0027s package name matches the expected value, which is \\\&quot;com.example.readalready_mad_project\\\&quot;.\&quot;,\&quot;/settings.gradle.kts\&quot;:\&quot;This file is a Gradle configuration file for an Android project. It does not contain any classes or functions, but rather configures the project\\u0027s build settings and dependencies.\\n\\n`pluginManagement`: Configures the repositories for plugin dependencies, including Google, Maven Central, and the Gradle Plugin Portal.\\n\\n`dependencyResolutionManagement`: Configures the repositories for project dependencies, including Google and Maven Central, and sets the repositories mode to fail on project repositories.\\n\\n`rootProject.name`: Sets the name of the root project to \\\&quot;ReadAlready_MAD_Project\\\&quot;.\\n\\n`include(\\\&quot;:app\\\&quot;)`: Includes the \\\&quot;:app\\\&quot; module in the project.\\n\\nOverall, this file sets up the build configuration for an Android project, specifying the repositories to use for plugin and dependency management, and includes the main application module.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/data/database/BookDAO.kt\&quot;:\&quot;This file defines a Data Access Object (DAO) interface for a Room database, which is used to interact with a table called \\\&quot;books\\\&quot; in the database.\\n\\n`BookDao`: This interface defines the methods for performing CRUD (Create, Read, Update, Delete) operations on the \\\&quot;books\\\&quot; table in the database.\\n\\n`getAllBooks()`: This function retrieves a flow of all the books stored in the \\\&quot;books\\\&quot; table.\\n\\n`insertBook(book: BookEntity)`: This function inserts a single book into the \\\&quot;books\\\&quot; table.\\n\\n`insertBooks(books: List\\u003cBookEntity\\u003e)`: This function inserts a list of books into the \\\&quot;books\\\&quot; table.\\n\\n`updateBook(book: BookEntity)`: This function updates an existing book in the \\\&quot;books\\\&quot; table.\\n\\n`getBookById(bookId: Long)`: This function retrieves a single book from the \\\&quot;books\\\&quot; table based on its ID.\\n\\n`deleteBook(bookId: String)`: This function deletes a book from the \\\&quot;books\\\&quot; table based on its ID.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/data/model/Book.kt\&quot;:\&quot;This file defines a single data class `Book` that represents a book with the following properties:\\n\\n`Book`: A data class that represents a book with properties such as `id`, `title`, `author`, `imageUrl`, `description`, and `rating`.\\n\\nThis file does not contain any functions, only the definition of the `Book` data class.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/data/api/BookApiService.kt\&quot;:\&quot;This file defines the API service for fetching book data from the Google Books API, along with the necessary data models and a Dagger Hilt module for providing the API service.\\n\\n`BookApiService`: An interface that defines the API endpoint for fetching books.\\n\\n`getBooks`: A suspend function that fetches a list of books based on a search query and maximum results.\\n\\n`NetworkModule`: A Dagger Hilt module that provides the necessary dependencies for the `BookApiService`, including the `Retrofit` instance and the `BookApiService` implementation.\\n\\n`provideRetrofit`: A function that creates a `Retrofit` instance with the necessary configuration, including an `OkHttpClient` with a logging interceptor.\\n\\n`provideBookApiService`: A function that provides the `BookApiService` implementation using the `Retrofit` instance.\\n\\n`BookResponse`: A data class that represents the response from the Google Books API, containing the total number of items and a list of `BookItem` objects.\\n\\n`BookItem`: A data class that represents a single book item, containing the book\\u0027s ID and `VolumeInfo`.\\n\\n`VolumeInfo`: A data class that represents the detailed information about a book, including the title, authors, publisher, publication date, description, page count, categories, average rating, ratings count, and image links.\\n\\n`ImageLinks`: A data class that represents the image links for a book, including the small thumbnail and full-size thumbnail.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/data/database/AppDatabase.kt\&quot;:\&quot;This file defines the Room database for the \\\&quot;ReadAlready\\\&quot; application, including the `BookDB` class and the `DatabaseModule` class.\\n\\n`BookDB`: A Room database class that stores `BookEntity` objects and provides access to the `BookDao` interface.\\n\\n`BookDB.getDatabase(context: Context)`: A function that returns the singleton instance of the `BookDB` database, creating a new instance if necessary.\\n\\n`DatabaseModule`: A Dagger module that provides the `BookDB` database instance and the `BookDao` interface.\\n\\n`DatabaseModule.provideDatabase(@ApplicationContext context: Context)`: A function that provides the `BookDB` database instance.\\n\\n`DatabaseModule.provideBookDao(db: BookDB)`: A function that provides the `BookDao` interface instance.\&quot;,\&quot;/app/build.gradle.kts\&quot;:\&quot;This file is a Gradle build script for an Android application. It sets up the project configuration, including the Android application plugin, Kotlin support, Compose UI, Hilt dependency injection, and various other dependencies. The file does not contain any classes or functions, but rather configures the build settings and dependencies for the Android application.\&quot;,\&quot;/app/src/test/java/com/example/readalready_mad_project/ExampleUnitTest.kt\&quot;:\&quot;This file contains a single unit test class with one test function. It does not contain any other classes or functions.\\n\\n`ExampleUnitTest`: This is a unit test class that contains a single test case to verify that the addition operation works as expected.\\n\\n`addition_isCorrect()`: This test function checks that the addition of 2 and 2 results in 4, which is the expected behavior.\\n\\nThe purpose of this file is to provide a basic example of a unit test class and function in the context of the \\\&quot;ReadAlready_MAD_Project\\\&quot; Android application.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/theme/CustomTheme.kt\&quot;:\&quot;This file defines the theme and color scheme for a ReadAlready app using Jetpack Compose.\\n\\n`CustomColors`: A data class that holds the custom colors for the app\\u0027s light and dark themes.\\n\\n`LightCustomColors`: A set of custom colors for the light theme.\\n\\n`DarkCustomColors`: A set of custom colors for the dark theme.\\n\\n`LocalCustomColors`: A static composition local of the custom colors.\\n\\n`ThemeColors`: An object that provides access to the current custom colors.\\n\\n`ReadAlreadyTheme`: A composable function that sets up the app\\u0027s theme and color scheme based on the system\\u0027s dark mode setting.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/di/RepositoryModule.kt\&quot;:\&quot;This file appears to be a Kotlin file that defines a `RepositoryModule` class, which is likely part of a dependency injection (DI) setup for the \\\&quot;ReadAlready_MAD_Project\\\&quot; application.\\n\\n`RepositoryModule`: This class is likely responsible for providing the necessary dependencies for the repository layer of the application, which is responsible for interacting with the data sources (e.g., databases, APIs) to fetch and manage the application\\u0027s data.\\n\\nSince there are no functions defined in this file, the file\\u0027s primary purpose is to set up the DI configuration for the repository-related dependencies in the application.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/screens/SearchScreen.kt\&quot;:\&quot;This file contains the UI components for the search screen in a book reading application built using Jetpack Compose.\\n\\n`SearchScreenContent`: Composable function that sets up the search screen, including the search bar and the main content.\\n\\n`SearchMainContent`: Composable function that displays the list of books returned from the search query, using a `LazyColumn` to efficiently render the list.\\n\\n`BookCard`: Composable function that represents a single book in the search results, displaying its title, authors, image, description, and providing an expandable view and a button to add the book to the user\\u0027s library.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/data/repository/BookRepositoryImpl.kt\&quot;:\&quot;This file contains a single class:\\n\\n`BookRepositoryImpl`: This class is likely responsible for implementing the logic for interacting with a data source (e.g., a database) to manage book-related data.\\n\\nThis file does not contain any functions. It appears to be a placeholder or a starting point for implementing the `BookRepository` interface or class, which would likely define the methods for performing CRUD (Create, Read, Update, Delete) operations on book-related data.\&quot;,\&quot;/build.gradle.kts\&quot;:\&quot;This file is a top-level build file that sets up common configuration options for all sub-projects or modules in the Android application. It does not contain any classes or functions, but instead, it applies various Gradle plugins to the project, including:\\n\\n`alias(libs.plugins.android.application) apply false`: Applies the Android application plugin to the project.\\n`alias(libs.plugins.kotlin.android) apply false`: Applies the Kotlin Android plugin to the project.\\n`alias(libs.plugins.kotlin.compose) apply false`: Applies the Kotlin Compose plugin to the project.\\n`alias(libs.plugins.hilt.android) apply false`: Applies the Hilt Android plugin to the project.\\n`alias(libs.plugins.ksp) apply false`: Applies the Kotlin Symbol Processing (KSP) plugin to the project.\\n`alias(libs.plugins.kotlinx.serialization) apply false`: Applies the Kotlinx Serialization plugin to the project.\\n\\nThe purpose of this file is to centralize the configuration of these common plugins, making it easier to manage and update the project\\u0027s build settings across all sub-projects or modules.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/MainActivity.kt\&quot;:\&quot;This file is the main entry point for the ReadAlready Android app, which uses Jetpack Compose for its user interface. It sets up the bottom navigation bar and the navigation between the different screens of the app.\\n\\n`MainActivity`: The main activity of the app, which sets up the Compose-based UI.\\n\\n`BottomNavigationBarApp`: The main composable function that sets up the bottom navigation bar and the navigation between the different screens of the app.\\n\\n`currentRoute`: A helper function that retrieves the current route (screen) being displayed in the navigation.\\n\\n`GreetingPreview`: A preview composable function for the `BottomNavigationBarApp` composable.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/di/DatabaseModule.kt\&quot;:\&quot;This file appears to be a Kotlin file that defines a `DatabaseModule` class, but it does not contain any functions. The purpose of this file is to provide a module for the database-related dependencies in the application\\u0027s dependency injection (DI) system.\\n\\n`DatabaseModule`: This class is likely responsible for providing the necessary database-related dependencies, such as database instances, data access objects (DAOs), or other database-related components, to the application\\u0027s DI system.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/components/RatingBar.kt\&quot;:\&quot;This file contains a single class:\\n\\n`RatingBar`: This class represents a rating bar component, which is likely used to display and interact with a rating system in the application.\\n\\nSince there are no functions defined in this file, the file appears to be a simple class definition for the `RatingBar` component, which is likely used as a UI element in the application.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/di/NetworkModule.kt\&quot;:\&quot;This file appears to be a Kotlin file that defines a `NetworkModule` class, but it does not contain any functions. The purpose of this file is to provide a module for handling network-related dependencies in the `readalready_mad_project` application.\\n\\n`NetworkModule`: This class is likely responsible for providing network-related dependencies, such as HTTP clients, API endpoints, or other network-related services, to the application\\u0027s components.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/states/SearchState.kt\&quot;:\&quot;This file defines a data class `SearchState` that represents the state of a search operation in the `ReadAlready_MAD_Project` application.\\n\\n`SearchState`: A data class that holds the state of a search operation, including a list of all available books and potentially a filtered list of books based on a specified filter option.\\n\\nThe file does not contain any functions, but it sets up the necessary data structure to manage the state of a search operation within the application.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/viewmodel/SettingsViewmodel.kt\&quot;:\&quot;This file contains a single class:\\n\\n`SettingsViewmodel`: This class is likely responsible for handling the logic and data related to the settings functionality of the application.\\n\\nSince there are no functions defined in this file, the file appears to be a placeholder for the `SettingsViewmodel` class, which will likely contain the necessary methods and properties to manage the settings-related functionality of the application.\&quot;,\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/theme/Colors.kt\&quot;:\&quot;This file defines the color palette for a Compose-based Android application. It does not contain any classes or functions, but rather defines a set of color constants that can be used throughout the application\\u0027s UI.\\n\\n`PastelLilac`: A light purple color used for the application\\u0027s theme.\\n`PastelGray`: A light gray color used for the application\\u0027s theme.\\n`AccentPurple`: A purple accent color used for the application\\u0027s theme.\\n`TextGray`: A dark gray color used for the application\\u0027s text.\\n`DarkBackground`: A dark background color used for the application\\u0027s theme.\\n`DarkCard`: A dark card color used for the application\\u0027s theme.\\n`TextWhite`: A white color used for the application\\u0027s text.\&quot;}&quot;}" />
    <option name="fileSkeletonMaps" value="{&quot;C:/Users/rette/StudioProjects/ReadAlready_MAD_Project&quot;:&quot;{\&quot;/app/src/androidTest/java/com/example/readalready_mad_project/ExampleInstrumentedTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/androidTest/java/com/example/readalready_mad_project/ExampleInstrumentedTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleInstrumentedTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/data/api/BookApiService.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/data/api/BookApiService.kt\&quot;,\&quot;file_name\&quot;:\&quot;BookApiService.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/data/database/AppDatabase.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/data/database/AppDatabase.kt\&quot;,\&quot;file_name\&quot;:\&quot;AppDatabase.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/data/database/BookDAO.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/data/database/BookDAO.kt\&quot;,\&quot;file_name\&quot;:\&quot;BookDAO.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/data/database/BookEntity.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/data/database/BookEntity.kt\&quot;,\&quot;file_name\&quot;:\&quot;BookEntity.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/data/database/Converters.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/data/database/Converters.kt\&quot;,\&quot;file_name\&quot;:\&quot;Converters.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/data/mapper/BookMapper.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/data/mapper/BookMapper.kt\&quot;,\&quot;file_name\&quot;:\&quot;BookMapper.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/data/model/Book.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/data/model/Book.kt\&quot;,\&quot;file_name\&quot;:\&quot;Book.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/data/repository/BookRepository.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/data/repository/BookRepository.kt\&quot;,\&quot;file_name\&quot;:\&quot;BookRepository.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/data/repository/BookRepositoryImpl.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/data/repository/BookRepositoryImpl.kt\&quot;,\&quot;file_name\&quot;:\&quot;BookRepositoryImpl.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/di/AppModule.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/di/AppModule.kt\&quot;,\&quot;file_name\&quot;:\&quot;AppModule.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/di/DatabaseModule.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/di/DatabaseModule.kt\&quot;,\&quot;file_name\&quot;:\&quot;DatabaseModule.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/di/NetworkModule.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/di/NetworkModule.kt\&quot;,\&quot;file_name\&quot;:\&quot;NetworkModule.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/di/RepositoryModule.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/di/RepositoryModule.kt\&quot;,\&quot;file_name\&quot;:\&quot;RepositoryModule.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/states/BooksState.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/states/BooksState.kt\&quot;,\&quot;file_name\&quot;:\&quot;BooksState.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/states/SearchState.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/states/SearchState.kt\&quot;,\&quot;file_name\&quot;:\&quot;SearchState.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/states/SettingState.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/states/SettingState.kt\&quot;,\&quot;file_name\&quot;:\&quot;SettingState.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/components/BookCard.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/components/BookCard.kt\&quot;,\&quot;file_name\&quot;:\&quot;BookCard.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/components/LoadingSpinner.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/components/LoadingSpinner.kt\&quot;,\&quot;file_name\&quot;:\&quot;LoadingSpinner.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/components/RatingBar.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/components/RatingBar.kt\&quot;,\&quot;file_name\&quot;:\&quot;RatingBar.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/components/SearchBar.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/components/SearchBar.kt\&quot;,\&quot;file_name\&quot;:\&quot;SearchBar.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/screens/BooksScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/screens/BooksScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;BooksScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/screens/SearchScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/screens/SearchScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;SearchScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/screens/SettingsScreen.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/screens/SettingsScreen.kt\&quot;,\&quot;file_name\&quot;:\&quot;SettingsScreen.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/theme/Colors.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/theme/Colors.kt\&quot;,\&quot;file_name\&quot;:\&quot;Colors.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/theme/CustomTheme.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/theme/CustomTheme.kt\&quot;,\&quot;file_name\&quot;:\&quot;CustomTheme.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/theme/Typography.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/theme/Typography.kt\&quot;,\&quot;file_name\&quot;:\&quot;Typography.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/Navigation.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/ui/Navigation.kt\&quot;,\&quot;file_name\&quot;:\&quot;Navigation.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/utils/constants.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/utils/constants.kt\&quot;,\&quot;file_name\&quot;:\&quot;constants.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/viewmodel/BooksViewModel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/viewmodel/BooksViewModel.kt\&quot;,\&quot;file_name\&quot;:\&quot;BooksViewModel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/viewmodel/SearchViewmodel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/viewmodel/SearchViewmodel.kt\&quot;,\&quot;file_name\&quot;:\&quot;SearchViewmodel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/viewmodel/SettingsViewmodel.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/viewmodel/SettingsViewmodel.kt\&quot;,\&quot;file_name\&quot;:\&quot;SettingsViewmodel.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/MainActivity.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/MainActivity.kt\&quot;,\&quot;file_name\&quot;:\&quot;MainActivity.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/main/java/com/example/readalready_mad_project/MyApp.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/main/java/com/example/readalready_mad_project/MyApp.kt\&quot;,\&quot;file_name\&quot;:\&quot;MyApp.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/src/test/java/com/example/readalready_mad_project/ExampleUnitTest.kt\&quot;:{\&quot;file_path\&quot;:\&quot;/app/src/test/java/com/example/readalready_mad_project/ExampleUnitTest.kt\&quot;,\&quot;file_name\&quot;:\&quot;ExampleUnitTest.kt\&quot;,\&quot;methods\&quot;:[]},\&quot;/app/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/app/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/build.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/build.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;build.gradle.kts\&quot;,\&quot;methods\&quot;:[]},\&quot;/settings.gradle.kts\&quot;:{\&quot;file_path\&quot;:\&quot;/settings.gradle.kts\&quot;,\&quot;file_name\&quot;:\&quot;settings.gradle.kts\&quot;,\&quot;methods\&quot;:[]}}&quot;}" />
  </component>
</project>